# -*- coding: utf-8 -*-
"""
Created on Thu Feb 20 17:34:49 2020

@author: user
"""


در صورتی که در transfer learning فقط بخواهیم لایه ها را زیاد و کم کنیم، با روش زیر قابل انجام است:
    
    
    
    
    
    
    ولی در صورتی که تابع هزینه مدل عوض شد، نیاز به compile مجدد است، در این صورت، مدل جدیدی تعریف کرده و کامپایل میکنیم.
    پس از کامپایل کردن باید وزنهای تکراری بین دو مدل را از مدل قبلی در مدل جدید کپی کنیم.


"""
define model1
compile model1 with mse
train model1
model.save_weights('model1.h5')
create model2 based on model1
compile model2
copy model1 weights layer by layer
model.load_weights('model.h5')
"""




# copy weights from one model to another model    
# tested in Keras 1.x    
def copyModel2Model(model_source,model_target,certain_layer=""):        
    for l_tg,l_sr in zip(model_target.layers,model_source.layers):
        wk0=l_sr.get_weights()
        l_tg.set_weights(wk0)
        if l_tg.name==certain_layer:
            break
    print("model source was copied into model target") 
copyModel2Model(model_1,model_2,"certainLayerName")


